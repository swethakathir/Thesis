property lzc_empty;
assume:
 at t: !cl_hit;
prove: 
at  t:  empty;
end property;

property lzc_cnt_0;
assume:
 at t: cl_hit ==4'b0001;
prove: 
at  t: hit_idx == 2'b0;
end property;

property lzc_cnt_1;
assume:
 at t: cl_hit == 4'b0010;
prove: 
at  t: hit_idx == 2'b01;
end property;

property lzc_cnt_2;
assume:
 at t: cl_hit == 4'b0100;
prove: 
at  t: hit_idx == 2'b10;
end property;

property lzc_cnt_3;
assume:
 at t: cl_hit == 4'b1000;
prove: 
at  t: cva6_icache/i_lzc_hit/cnt_o  == 2'b11;    // i_lzc_hit is an instantianted module (lzc) in cva6_icache top module. Need to access output signal of
                                                 // instantiated module
end property;


property lfsr_8bit;
disable iff: !rst_ni;
assume:
 at t: update_lfsr;
prove: 
at  t+1: rnd_way == 2'b00 | rnd_way == 2'b01 | rnd_way == 2'b10 | rnd_way == 2'b11;
end property;

//property data_read_sram;
//disable iff: !rst_ni;   cva6_icache.gen_sram[0].data_sram.gen_cut[0].gen_mem.i_ram.Mem_DP
//assume:
//  at t: cl_req && !cl_we;
//prove:
//  at t+1: cl_rdata[0] == cva6_icache/gen_sram[0]/gen_cut[0]/gen_mem/i_ram/Mem_DP[cl_index];
//end property;







